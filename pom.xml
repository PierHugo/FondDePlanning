<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.polytech</groupId>
	<artifactId>planning</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>planning</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.10</java.version>
		<junit.version>4.12</junit.version>
		<junit.jupiter.version>5.0.1</junit.jupiter.version>
		<junit.vintage.version>${junit.version}.1</junit.vintage.version>
		<junit.platform.version>1.0.1</junit.platform.version>
	</properties>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>planning</id>
            <name>Planning Deployment</name>
            <url>file:///D:\Documents\Polytech\ProjetSem7\repos\FondDePlanning\target</url>
            <layout>default</layout>
        </repository>
    </distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.polytech.planning.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
					</includes>
					<properties>
						<!-- <includeTags>fast</includeTags> -->
						<excludeTags>slow</excludeTags>
						<!-- <configurationParameters> junit.jupiter.conditions.deactivate 
							= * </configurationParameters> -->
					</properties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>${junit.platform.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Only required to run tests in an IDE that bundles an older version -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Only required to run tests in an IDE that bundles an older version -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Only required to run tests in an IDE that bundles an older version -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.vintage.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- To avoid compiler warnings about @API annotations in JUnit code -->
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.0.0</version>
		</dependency>
		<!--<version>3.17</version>-->

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>4.0.0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/piccolo/piccolo -->
		<dependency>
			<groupId>piccolo</groupId>
			<artifactId>piccolo</artifactId>
			<version>1.0.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.omg.dds/java5-psm -->
		<dependency>
			<groupId>org.omg.dds</groupId>
			<artifactId>java5-psm</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>org.jacorb</groupId>
			<artifactId>jacorb-omgapi</artifactId>
			<version>3.9</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jacorb/jacorb -->
		<!--<dependency>-->
			<!--<groupId>org.jacorb</groupId>-->
			<!--<artifactId>jacorb</artifactId>-->
			<!--<version>3.1</version>-->
		<!--</dependency>-->

		 <!--https://mvnrepository.com/artifact/com.sun.corba/orb-->
		<dependency>
			<groupId>com.sun.corba</groupId>
			<artifactId>orb</artifactId>
			<version>9.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.glassfish.corba/glassfish-corba-orb -->
		<dependency>
			<groupId>org.glassfish.corba</groupId>
			<artifactId>glassfish-corba-orb</artifactId>
			<version>4.2.0-b004</version>
		</dependency>

		<!-- A SLF4J compatible logging framework. I would recommend to use logback-->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>


	</dependencies>
</project>
